<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:metal="http://xml.zope.org/namespaces/metal"
    xmlns:tal="http://xml.zope.org/namespaces/tal"
    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
    i18n:domain="cpskin">

<body>

    <metal:homepage-event-category-first define-macro="homepage-event-category-first">

        <tal:block tal:condition="has_category">
        <tal:loop tal:define="categories python: view.get_categories(content, obj, limit=1)" tal:condition="categories">
                <div class="indexview-categories" tal:content="categories" />
        </tal:loop>
        </tal:block>
        <a href=""
           title=""
           class="medialink"
           tal:define="show_day_and_month python: view.show_day_and_month(content);
                       show_lead_image python: view.show_lead_image(content);
                       item_type result/Type;
                       classe python: view.get_class(item_type)"
           tal:attributes="href result/getURL;
                           title result/Title;
                           class classe">

          <tal:if tal:condition="show_day_and_month">
            <div class="day-month"
                 tal:define="dates python: view.get_event_dates(obj);
                             start dates/start;
                             end dates/end">
              <div tal:content="start"
                   tal:condition="start" />
              <div tal:content="end"
                   tal:condition="end" />
            </div>
          </tal:if>

          <tal:if tal:condition="show_lead_image">
            <div class="pageleadImage"
                 tal:condition="python: item_type != 'Media Link'"
                 style=""
                 tal:define="scaled_image_url python:view.scaled_image_url(content, obj, isBigImage)"
                 tal:attributes="style string:background-image: url(${scaled_image_url})">
            </div>
          </tal:if>

          <div class="pagecaption">
            <div tal:condition="python: item_type == 'Media Link'"
                 tal:define="item python: result.getObject();
                             video python: view.get_video(item)">
                <div tal:content='structure video'/>
            </div>

            <h3 tal:content="result/Title"></h3>

            <span class="documentByLine"
                  tal:condition="python: view.see_start_end_date(result, content)"
                  tal:define="event python: result.getObject()">
              <tal:one_day condition="python: view.is_one_day(event)">
              <span i18n:translate="evenement_le">le</span>
              <span tal:content="python: view.toLocalizedTime(result.start, long_format=0, event=result)" />
                <tal:withHours condition="python: view.is_with_hours(event)">
                  <tal:openEnd condition="python: view.is_open_end(event)">
                    <span i18n:translate="evenement_a_lheure">à</span>
                    <span tal:content="python: view.toLocalizedTime(result.start, long_format=1, event=result)[11:]" />
                  </tal:openEnd>
                  <tal:fixedEnd condition="python: not view.is_open_end(event)">
                    <span i18n:translate="evenement_de">de</span>
                    <span tal:content="python: view.toLocalizedTime(result.start, long_format=1, event=result)[11:]" />
                    <span i18n:translate="evenement_a">à</span>
                    <span tal:content="python: view.toLocalizedTime(result.end, long_format=1, event=result, startend='end')[11:]" />
                  </tal:fixedEnd>
                </tal:withHours>
              </tal:one_day>
              <tal:more_days condition="python: not view.is_one_day(event)">
                <span i18n:translate="evenement_du">du</span>
                <span tal:content="python: view.toLocalizedTime(result.start, long_format=0, event=result)" />
                <span i18n:translate="evenement_au">au</span>
                <span tal:content="python: view.toLocalizedTime(result.end, long_format=0, event=result, startend='end')" />
              </tal:more_days>
            </span>

            <span class="documentByLine"
                  tal:condition="python: not view.hide_date(result, content)">
              <span tal:content="python: view.toLocalizedTime(result.effective, long_format=0)" />
            </span>

            <div class="description"
                 tal:condition="python: view.show_descriptions(content)"
                 tal:content="result/Description" />

           </div>
          </a>

    </metal:homepage-event-category-first>


    <metal:homepage-event-image-first define-macro="homepage-event-image-first">

        <a href=""
           title=""
           class="medialink"
           tal:define="show_day_and_month python: view.show_day_and_month(content);
                       show_lead_image python: view.show_lead_image(content);
                       item_type result/Type;
                       classe python: view.get_class(item_type)"
           tal:attributes="href result/getURL;
                           title result/Title;
                           class classe">

          <tal:if tal:condition="show_day_and_month">
            <div class="day-month"
                 tal:define="dates python: view.get_event_dates(obj);
                             start dates/start;
                             end dates/end">
              <div tal:content="start"
                   tal:condition="start" />
              <div tal:content="end"
                   tal:condition="end" />
            </div>
          </tal:if>

          <tal:if tal:condition="show_lead_image">
            <div class="pageleadImage"
                 tal:condition="python: item_type != 'Media Link'"
                 style=""
                 tal:define="scaled_image_url python:view.scaled_image_url(content, obj, isBigImage)"
                 tal:attributes="style string:background-image: url(${scaled_image_url})">
            </div>
          </tal:if>

          <div class="pagecaption">
            <div tal:condition="python: item_type == 'Media Link'"
                 tal:define="item python: result.getObject();
                             video python: view.get_video(item)">
                <div tal:content='structure video'/>
            </div>

            <tal:block tal:condition="has_category">
            <tal:loop tal:define="categories python: view.get_categories(content, obj, limit=1)" tal:condition="categories">
                    <div class="indexview-categories" tal:content="categories" />
            </tal:loop>
            </tal:block>

            <span class="documentByLine"
                  tal:condition="python: view.see_start_end_date(result, content)"
                  tal:define="event python: result.getObject()">
              <tal:one_day condition="python: view.is_one_day(event)">
              <span i18n:translate="evenement_le">le</span>
              <span tal:content="python: view.toLocalizedTime(result.start, long_format=0, event=result)" />
                <tal:withHours condition="python: view.is_with_hours(event)">
                  <tal:openEnd condition="python: view.is_open_end(event)">
                    <span i18n:translate="evenement_a_lheure">à</span>
                    <span tal:content="python: view.toLocalizedTime(result.start, long_format=1, event=result)[11:]" />
                  </tal:openEnd>
                  <tal:fixedEnd condition="python: not view.is_open_end(event)">
                    <span i18n:translate="evenement_de">de</span>
                    <span tal:content="python: view.toLocalizedTime(result.start, long_format=1, event=result)[11:]" />
                    <span i18n:translate="evenement_a">à</span>
                    <span tal:content="python: view.toLocalizedTime(result.end, long_format=1, event=result, startend='end')[11:]" />
                  </tal:fixedEnd>
                </tal:withHours>
              </tal:one_day>
              <tal:more_days condition="python: not view.is_one_day(event)">
                <span i18n:translate="evenement_du">du</span>
                <span tal:content="python: view.toLocalizedTime(result.start, long_format=0, event=result)" />
                <span i18n:translate="evenement_au">au</span>
                <span tal:content="python: view.toLocalizedTime(result.end, long_format=0, event=result, startend='end')" />
              </tal:more_days>
            </span>

            <span class="documentByLine"
                  tal:condition="python: not view.hide_date(result, content)">
              <span tal:content="python: view.toLocalizedTime(result.effective, long_format=0)" />
            </span>

            <h3 tal:content="result/Title"></h3>

            <div class="description"
                 tal:condition="python: view.show_descriptions(content)"
                 tal:content="result/Description" />

           </div>
          </a>

    </metal:homepage-event-image-first>


    <metal:homepage-collection define-macro="homepage-collection">
        <div class="titre-rss" tal:condition="python: not view.hide_title(content)">
            <a href=""
                class="titre"
                tal:attributes="href string:${content/absolute_url}">
                <h2 tal:content="content/Title"></h2>
            </a>
            <a class="bloc-rss"
                href=""
                tal:attributes="href content/@@syndication-util/rss_url">
                <img src="++resource++cpskin.core.images/rss.png"
                     alt="Flux RSS"
                     i18n:attributes="alt flux_rss" />
             </a>
        </div>
        <div class="results parsable-content"
            tal:define="allresults python: view.getResults(content);
                        resultTypes python: ['sticky-results', 'standard-results']"
            tal:condition="allresults">

            <tal:bcl tal:repeat="resultType resultTypes">
                <ul class=""
                    tal:define="results python: allresults[resultType];
                                has_category python: view.see_categories(content);"
                    tal:condition="results"
                    tal:attributes="class string: ${resultType}">

                  <tal:bcl tal:repeat="result results">

                    <li tal:define="number repeat/result/number;
                                    isBigImage python: view.isBigImage(number, allresults, resultType);
                                    obj python: result.getObject()"
                        class=""
                        tal:attributes="class python: isBigImage and 'bigimage bloc-item' or 'bloc-item'">

                        <a href=""
                           tal:define="show_day_and_month python: view.show_day_and_month(content);
                                       show_lead_image python: view.show_lead_image(content)"
                           tal:attributes="href result/getURL;
                                           title result/Title">
                             <tal:block tal:condition="has_category">
                             <tal:loop tal:define="categories python: view.get_categories(content, obj, limit=1)" tal:condition="categories">
                                 <div class="indexview-categories" tal:content="categories" />
                             </tal:loop>
                             </tal:block>
                             <tal:if tal:condition="python: obj.portal_type == 'Event' and show_day_and_month">
                                <div class="day-month"
                                     tal:define="dates python: view.get_event_dates(obj);
                                                 start dates/start;
                                                 end dates/end">
                                  <div tal:content="start"
                                       tal:condition="start" />
                                  <div tal:content="end"
                                       tal:condition="end" />
                                </div>
                             </tal:if>

                             <tal:if tal:condition="show_lead_image">

                                <div class="homepageleadImage"
                                     tal:define="scaled_image python:view.collection_image_scale(content, obj)">

                                  <figure class="newsImageContainer" tal:condition="python: scaled_image">
                                      <img tal:replace="structure python: scaled_image" />
                                      <figcaption tal:condition="context/image_caption|nothing"
                                          tal:content="structure context/image_caption">
                                      </figcaption>
                                  </figure>

                                </div>

                              </tal:if>

                              <h3 tal:content="result/Title"></h3>
                            </a>

                            <span class="documentByLine"
                                  tal:condition="python: view.see_start_end_date(result, content)"
                                  tal:define="event python: result.getObject()">
                              <tal:one_day condition="python: view.is_one_day(event)">
                              <span i18n:translate="evenement_le">le</span>
                              <span tal:content="python: view.toLocalizedTime(result.start, long_format=0, event=result)" />
                                <tal:withHours condition="python: view.is_with_hours(event)">
                                  <tal:openEnd condition="python: view.is_open_end(event)">
                                    <span i18n:translate="evenement_a_lheure">à</span>
                                    <span tal:content="python: view.toLocalizedTime(result.start, long_format=1, event=result)[11:]" />
                                  </tal:openEnd>
                                  <tal:fixedEnd condition="python: not view.is_open_end(event)">
                                    <span i18n:translate="evenement_de">de</span>
                                    <span tal:content="python: view.toLocalizedTime(result.start, long_format=1, event=result)[11:]" />
                                    <span i18n:translate="evenement_a">à</span>
                                    <span tal:content="python: view.toLocalizedTime(result.end, long_format=1, event=result, startend='end')[11:]" />
                                  </tal:fixedEnd>
                                </tal:withHours>
                              </tal:one_day>
                              <tal:more_days condition="python: not view.is_one_day(event)">
                                <span i18n:translate="evenement_du">du</span>
                                <span tal:content="python: view.toLocalizedTime(result.start, long_format=0, event=result)" />
                                <span i18n:translate="evenement_au">au</span>
                                <span tal:content="python: view.toLocalizedTime(result.end, long_format=0, event=result, startend='end')" />
                              </tal:more_days>
                            </span>

                            <span class="documentByLine"
                                  tal:condition="python: not view.hide_date(result, content)">
                              <span tal:content="python: view.toLocalizedTime(result.effective, long_format=0)" />
                            </span>

                            <div class="description"
                                 tal:condition="python: view.show_descriptions(content)"
                                 tal:content="result/Description" />

                          </li>
                         </tal:bcl>
                        </ul>
                      </tal:bcl>
                    </div>
                    <div class="voir-tout-content">
                      <a tal:condition='python: not view.hide_see_all_link(content)'
                       href=""
                       class="voir-tout"
                       tal:attributes="href string:${content/absolute_url}">
                       <span tal:replace='python: view.see_all(content)' />
                      </a>
                    </div>

    </metal:homepage-collection>

    <metal:homepage-collection-new-template define-macro="homepage-collection-new-template">
        <div class="titre-rss" tal:condition="python: not view.hide_title(content)">
            <a href=""
                class="titre"
                tal:attributes="href string:${content/absolute_url}">
                <h2 tal:content="content/Title"></h2>
            </a>
            <a class="bloc-rss"
                href=""
                tal:attributes="href content/@@syndication-util/rss_url">
                <img src="++resource++cpskin.core.images/rss.png"
                     alt="Flux RSS"
                     i18n:attributes="alt flux_rss" />
             </a>
        </div>
        <div class="results parsable-content"
            tal:define="allresults python: view.getResults(content);
                        resultTypes python: ['sticky-results', 'standard-results']"
            tal:condition="allresults">

            <tal:bcl tal:repeat="resultType resultTypes">
                <ul class=""
                    tal:define="results python: allresults[resultType];
                                has_category python: view.see_categories(content);"
                    tal:condition="results"
                    tal:attributes="class string: ${resultType}">

                  <tal:bcl tal:repeat="result results">

                    <li tal:define="number repeat/result/number;
                                    isBigImage python: view.isBigImage(number, allresults, resultType);
                                    obj python: result.getObject();
                                    show_event_category_below_image python: view.show_event_category_below_image(content);"
                        class=""
                        tal:attributes="class python: isBigImage and 'bigimage bloc-item' or 'bloc-item'">

                        <tal:if tal:condition="show_event_category_below_image">
                            <metal:use use-macro="context/@@cpskincore-macros/homepage-event-image-first" />
                        </tal:if>
                        <tal:else tal:condition="not: show_event_category_below_image">
                            <metal:use use-macro="context/@@cpskincore-macros/homepage-event-category-first" />
                        </tal:else>


                          </li>
                         </tal:bcl>
                        </ul>
                      </tal:bcl>
                    </div>
                    <div class="voir-tout-content">
                      <a tal:condition='python: not view.hide_see_all_link(content)'
                       href=""
                       class="voir-tout"
                       tal:attributes="href string:${content/absolute_url}">
                       <span tal:replace='python: view.see_all(content)' />
                      </a>
                    </div>

    </metal:homepage-collection-new-template>

  <metal:homepage define-macro="homepage">
    <tal:def tal:define="use_new_template python: view.use_new_template(content);
                         use_slider python: view.use_slider(content);
                         use_slick python: view.use_slick(content);
                         bloc_class python: view.get_block_class(content);">
      <div id="flex"
           tal:condition="python: use_slider and view.hasFlexSlider() and not use_slick"
           tal:attributes="class string:bloc-${repeat/content/number} bloc-collection-slider ${content/id} ${bloc_class}">
          <div class="flex-container parsable-content"
               tal:define="context nocall:content;
                           here nocall:content">
              <tal:cond condition="python:view.getSliderType(content) == 'slider-vertical'">
                    <metal:block use-macro="context/@@slider_view_vertical/macros/content-core" />
              </tal:cond>
              <tal:cond condition="python:view.getSliderType(content) != 'slider-vertical'">
                    <metal:block use-macro="context/@@slider_view/macros/content-core" />
              </tal:cond>
          </div>

      </div>
      <div class="slick"
           tal:condition="python: use_slick and view.has_slick_slider()"
           tal:attributes="class string:bloc-${repeat/content/number} bloc-collection-slider ${content/id} ${bloc_class}">
          <div class="slick-container parsable-content"
               tal:define="context nocall:content;
                           here nocall:content">
              <metal:block use-macro="context/@@slick_view/macros/content-core" />
          </div>

      </div>

      <div class=""
           tal:condition="python: not use_slider and content.portal_type == 'Collection' and content.results()"
           tal:attributes="class string:bloc-${repeat/content/number} bloc-collection ${content/id} ${bloc_class}">

          <tal:if tal:condition="use_new_template">
              <metal:use use-macro="context/@@cpskincore-macros/homepage-collection-new-template" />
          </tal:if>
          <tal:else tal:condition="not: use_new_template">
              <metal:use use-macro="context/@@cpskincore-macros/homepage-collection" />
          </tal:else>

      </div>

      <div class=""
           tal:condition="python: content.portal_type == 'Document'"
           tal:attributes="class string:bloc-${repeat/content/number} bloc-document ${content/id} ${bloc_class}">

          <p tal:condition="python: member.has_permission('Modify portal content', content)">
            <a href=""
               tal:attributes="href string:${content/absolute_url}/edit"
               i18n:translate="modifier_zone_statique">[Modifier la zone statique]</a>
          </p>
          <p tal:replace="structure content/getText" />

      </div>
      <div class=""
           tal:condition="python: content.portal_type == 'Link'"
           tal:attributes="class string:bloc-${repeat/content/number} bloc-document ${content/id} ${bloc_class}">
          <span tal:replace="structure content/render" />
      </div>
      <div class=""
           tal:condition="python: content.portal_type == 'rss_feed'"
	   tal:attributes="class string:bloc-${repeat/content/number} bloc-collection-rss ${content/id} ${bloc_class}">
           <a tal:attributes="href python:content.url_main or ('/'.join(content.url.split('/', 3)[:3])
	       if content.url.startswith('http') 
	       else '/'.join('http://{}'.format(content.url).split('/', 3)[:3]))"
	       target="_blank" class="rss-title"><h2 tal:content="content/title" /></a>
           <span tal:replace="structure content/@@rss_feed_macro" />
           <a tal:attributes="href python:content.url_main or ('/'.join(content.url.split('/', 3)[:3])
	       if content.url.startswith('http') 
	       else '/'.join('http://{}'.format(content.url).split('/', 3)[:3]))"
	       target="_blank" class="view-all" tal:content="content/title" />
      </div>
    </tal:def>
  </metal:homepage>

</body>
</html>
